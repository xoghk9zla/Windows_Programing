#include <Windows.h>
#include <math.h>

HINSTANCE g_hInst;
LPCTSTR lpszClass = "window programe 3-5";	// 제목

LRESULT CALLBACK WndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

struct Shape{
	int cenX, cenY, r, color[3], cnt=0, up=1;
	bool sel;
	Shape(){}
	Shape(int x, int y, int r) : cenX(x), cenY(y), r(r){}
};
float LengthPts(int x, int y, Shape a)
{
	return (sqrt((float)(a.cenX - x)*(a.cenX - x) + (a.cenY - y)*(a.cenY - y)));
}
BOOL InCircle(int x, int y, Shape a)
{
	if (LengthPts(x, y, a) < 25+a.r)
		return TRUE;
	else return FALSE;
}

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpszCmdParam, int nCmdShow)
{
	HWND hWnd;
	MSG Message;
	WNDCLASS WndClass;
	g_hInst = hInstance;

	WndClass.cbClsExtra = 0;
	WndClass.cbWndExtra = 0;
	WndClass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
	WndClass.hCursor = LoadCursor(NULL, IDC_ARROW);
	WndClass.hIcon = LoadIcon(NULL, IDI_APPLICATION);
	WndClass.hInstance = hInstance;
	WndClass.lpfnWndProc = (WNDPROC)WndProc;
	WndClass.lpszClassName = lpszClass;
	WndClass.lpszMenuName = NULL;
	WndClass.style = CS_HREDRAW | CS_VREDRAW;

	RegisterClass(&WndClass);

	hWnd = CreateWindow(lpszClass, lpszClass, WS_OVERLAPPEDWINDOW, 0, 0, 1200, 700, NULL, (HMENU)NULL, hInstance, NULL); //윈도우 클래스 이름, 타이틀 이름, 스타일, x좌표, y좌표, 폭, 높이, 부모윈도우 핸들, 메뉴 핸들, 응용 프로그램id, 생성된 윈도우 정보

	ShowWindow(hWnd, nCmdShow);
	UpdateWindow(hWnd);

	while (GetMessage(&Message, 0, 0, 0)){
		TranslateMessage(&Message);
		DispatchMessage(&Message);
	}
	return Message.wParam;
}

LRESULT CALLBACK WndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam){
	HDC hdc;
	PAINTSTRUCT ps;
	HBRUSH  hBrush, oldBrush;
	int mx, my;
	static Shape Circle[20];
	static bool Drag;
	static int endX, endY, cnt;
	switch (uMsg)
	{
	case WM_CREATE:
		SetTimer(hWnd, 1, 1000, NULL);
		for (int i = 0; i < 20; ++i){
			Circle[i].cenX = rand() % 1100, Circle[i].cenY = rand() % 500, Circle[i].r = rand() % 110;
			Circle[i].color[0] = rand() % 255 + 1, Circle[i].color[1] = rand() % 255 + 1, Circle[i].color[2] = rand() % 255 + 1;
		}
		endX = 25, endY = 25, Drag = FALSE, cnt = 0;
		break;
	case WM_PAINT:
		hdc = BeginPaint(hWnd, &ps);
		
		for (int i = 0; i < 20; ++i){
			if (Circle[i].sel == FALSE)
				Ellipse(hdc, Circle[i].cenX - Circle[i].r, Circle[i].cenY - Circle[i].r, Circle[i].cenX + Circle[i].r, Circle[i].cenY + Circle[i].r);
			else{
				hBrush = CreateSolidBrush(RGB(0, 0, 255));
				oldBrush = (HBRUSH)SelectObject(hdc, hBrush);
				Ellipse(hdc, Circle[i].cenX - Circle[i].r, Circle[i].cenY - Circle[i].r, Circle[i].cenX + Circle[i].r, Circle[i].cenY + Circle[i].r);
				SelectObject(hdc, oldBrush);
				DeleteObject(hBrush);
					++cnt;
			}
		}
		hBrush = CreateSolidBrush(RGB(255, 0, 0));
		oldBrush = (HBRUSH)SelectObject(hdc, hBrush);
		Ellipse(hdc, endX - 25, endY - 25, endX + 25, endY + 25);
		SelectObject(hdc, oldBrush);
		DeleteObject(hBrush);
		EndPaint(hWnd, &ps);
		break;
	case WM_LBUTTONDOWN:
		Drag = TRUE;

		break;
	case WM_LBUTTONUP:
		char buf[50];
		hdc = GetDC(hWnd);
		Drag = FALSE;
		wsprintf(buf, "지나간 원의 갯수: %d", cnt);
		TextOut(hdc, 500, 500, buf, strlen(buf));
		ReleaseDC(hWnd, hdc);
		break;
	case WM_MOUSEMOVE:
		if (Drag){
			endX = LOWORD(lParam);
			endY = HIWORD(lParam);
			for (int i = 0; i < 20; ++i){
				if (InCircle(endX, endY, Circle[i])){
					Circle[i].sel = TRUE;
				}
				
			}
			InvalidateRect(hWnd, NULL, TRUE);
		}
		break;
	case WM_DESTROY:
		PostQuitMessage(0);

		return 0;
	default:
		break;
	}
	return DefWindowProc(hWnd, uMsg, wParam, lParam);
}