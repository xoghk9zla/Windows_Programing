#include <stdio.h>
#include <Windows.h>

#define _CRT_SECURE_NO_WARNINGS

HINSTANCE g_hInst;
LPCTSTR lpszClass = "window programe 2-9";	// 제목

LRESULT CALLBACK WndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpszCmdParam, int nCmdShow)
{
	HWND hWnd;
	MSG Message;
	WNDCLASS WndClass;
	g_hInst = hInstance;

	WndClass.cbClsExtra = 0;
	WndClass.cbWndExtra = 0;
	WndClass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
	WndClass.hCursor = LoadCursor(NULL, IDC_ARROW);
	WndClass.hIcon = LoadIcon(NULL, IDI_APPLICATION);
	WndClass.hInstance = hInstance;
	WndClass.lpfnWndProc = (WNDPROC)WndProc;
	WndClass.lpszClassName = lpszClass;
	WndClass.lpszMenuName = NULL;
	WndClass.style = CS_HREDRAW | CS_VREDRAW;

	RegisterClass(&WndClass);

	hWnd = CreateWindow(lpszClass, lpszClass, WS_OVERLAPPEDWINDOW, 0, 0, 1200, 700, NULL, (HMENU)NULL, hInstance, NULL); //윈도우 클래스 이름, 타이틀 이름, 스타일, x좌표, y좌표, 폭, 높이, 부모윈도우 핸들, 메뉴 핸들, 응용 프로그램id, 생성된 윈도우 정보 

	ShowWindow(hWnd, nCmdShow);
	UpdateWindow(hWnd);

	while (GetMessage(&Message, 0, 0, 0)){
		TranslateMessage(&Message);
		DispatchMessage(&Message);
	}
	return Message.wParam;
}

LRESULT CALLBACK WndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam){
	HDC hdc;
	PAINTSTRUCT ps;
	HPEN hPen, oldPen;
	static int x1, y1, x2, y2, count, shape, plus, minus, i, r, g, b;
	static char str[50], error[20];
	static SIZE size;

	switch (uMsg)
	{
	case WM_CREATE:
		count = 0, plus = 0, minus = 0, i = 1, shape = 0;
		x1 = 0, y1 = 0, x2 = 0, y2 = 0;
		CreateCaret(hWnd, NULL, 5, 15);
		ShowCaret(hWnd);

		break;
	case WM_PAINT:
		hdc = BeginPaint(hWnd, &ps);

		Rectangle(hdc, 0, 625, 410, 650);
		GetTextExtentPoint(hdc, str, strlen(str), &size);
		sscanf(str, "%d, %d %d %d %d", &shape, &x1, &y1, &x2, &y2);
		TextOut(hdc, 10, 630, str, strlen(str));
		TextOut(hdc, 10, 630, error, strlen(error));
		SetCaretPos(size.cx + 10, 630);

		hPen = CreatePen(PS_SOLID, i, RGB(r, g, b));
		oldPen = (HPEN)SelectObject(hdc, hPen);

		switch (shape)
		{
		case 1://선
			MoveToEx(hdc, x1, y1, NULL);
			LineTo(hdc, x2, y2);
			break;
		case 2://원
			Ellipse(hdc, x1, y1, x2, y2);
			break;
		case 3://사각형
			Rectangle(hdc, x1, y1, x2, y2);
			break;
		}

		SelectObject(hdc, oldPen);
		DeleteObject(hPen);
		EndPaint(hWnd, &ps);
		break;
	case WM_CHAR:
		hdc = GetDC(hWnd);

		if (count < 49){
			if (wParam == VK_BACK)
				--count;
			else if (wParam == VK_RETURN){
				count = 0;
				shape = 0;
			}
			else if (wParam == '+'){
				++plus;
				if (shape == 0){ wsprintf(error, "도형이 없습니다."); }
				else
					wsprintf(error, " ");
				if (plus % 5 == 0 && i >= 0){ ++i; }
				if (i > 3){ r = rand() % 255 + 1, g = rand() % 255 + 1, b = rand() % 255 + 1; }
				InvalidateRect(hWnd, NULL, TRUE);
			}
			else if (wParam == '-' && i >= 0){
				++minus;
				if (shape == 0){ wsprintf(error, "도형이 없습니다."); }
				else
					wsprintf(error, " ");
				if (minus % 5 == 0){ --i; }
				if (i < 3){ r = 0, g = 0, b = 0; }
			}
			else
				str[count++] = wParam;
			str[count] = '\0';
			InvalidateRect(hWnd, NULL, TRUE);
		}
		ReleaseDC(hWnd, hdc);

		break;
	case WM_DESTROY:
		HideCaret(hWnd);
		DestroyCaret();
		PostQuitMessage(0);

		return 0;
	default:
		break;
	}
	return DefWindowProc(hWnd, uMsg, wParam, lParam);
}