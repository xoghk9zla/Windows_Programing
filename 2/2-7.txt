#include <Windows.h>

HINSTANCE g_hInst;
LPCTSTR lpszClass = "window programe 2-7";	// 제목

LRESULT CALLBACK WndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam);

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpszCmdParam, int nCmdShow)
{
	HWND hWnd;
	MSG Message;
	WNDCLASS WndClass;
	g_hInst = hInstance;

	WndClass.cbClsExtra = 0;
	WndClass.cbWndExtra = 0;
	WndClass.hbrBackground = (HBRUSH)GetStockObject(WHITE_BRUSH);
	WndClass.hCursor = LoadCursor(NULL, IDC_ARROW);
	WndClass.hIcon = LoadIcon(NULL, IDI_APPLICATION);
	WndClass.hInstance = hInstance;
	WndClass.lpfnWndProc = (WNDPROC)WndProc;
	WndClass.lpszClassName = lpszClass;
	WndClass.lpszMenuName = NULL;
	WndClass.style = CS_HREDRAW | CS_VREDRAW;

	RegisterClass(&WndClass);

	hWnd = CreateWindow(lpszClass, lpszClass, WS_OVERLAPPEDWINDOW, 0, 0, 1200, 700, NULL, (HMENU)NULL, hInstance, NULL); //윈도우 클래스 이름, 타이틀 이름, 스타일, x좌표, y좌표, 폭, 높이, 부모윈도우 핸들, 메뉴 핸들, 응용 프로그램id, 생성된 윈도우 정보 

	ShowWindow(hWnd, nCmdShow);
	UpdateWindow(hWnd);

	while (GetMessage(&Message, 0, 0, 0)){
		TranslateMessage(&Message);
		DispatchMessage(&Message);
	}
	return Message.wParam;
}

LRESULT CALLBACK WndProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam){
	HDC hdc;
	PAINTSTRUCT ps;
	HPEN hPen, oldPen;
	HBRUSH  hBrush, oldBrush;
	static int x1, y1, x2, y2;
	switch (uMsg)
	{
	case WM_CREATE:
		x1 = 0, y1 = 0, x2 = 80, y2 = 80;
		break;
	case WM_PAINT:
		hdc = BeginPaint(hWnd, &ps);

		hPen = CreatePen(PS_SOLID, 1, RGB(0, 0, 0));
		oldPen = (HPEN)SelectObject(hdc, hPen);

		for (int i = 0; i < 4; ++i){
			for (int j = 0; j < 4; ++j){
				Rectangle(hdc, i * 80, (j + 1) * 80, (i + 1) * 80, j * 80);
			}
		}
		hBrush = CreateSolidBrush(RGB(255, 0, 0));
		oldBrush = (HBRUSH)SelectObject(hdc, hBrush);

		Rectangle(hdc, x1, y1, x2, y2);

		SelectObject(hdc, oldPen);
		DeleteObject(hPen);

		SelectObject(hdc, oldBrush);
		DeleteObject(hBrush);

		EndPaint(hWnd, &ps);
		break;
	case WM_KEYDOWN:
		hdc = GetDC(hWnd);
			if (wParam == VK_LEFT && (x1 != 0 && x2 != 0)){
				x1 -= 80;
				x2 -= 80;
				InvalidateRect(hWnd, NULL, TRUE);
			}
			else if (wParam == VK_RIGHT && (x1 <= 240 && x2 <= 240)){
				x1 += 80;
				x2 += 80;
				InvalidateRect(hWnd, NULL, TRUE);
			}
			else if (wParam == VK_DOWN && (y1 <= 240 && y2 <= 240)){
				y1 += 80;
				y2 += 80;
				InvalidateRect(hWnd, NULL, TRUE);
			}
			else if (wParam == VK_UP && (y1 != 0 && y2 != 0)){
				y1 -= 80;
				y2 -= 80;
				InvalidateRect(hWnd, NULL, TRUE);
			}
		ReleaseDC(hWnd, hdc);
		break;
	case WM_DESTROY:
		PostQuitMessage(0);
		return 0;
	default:
		break;
	}
	return DefWindowProc(hWnd, uMsg, wParam, lParam);
}